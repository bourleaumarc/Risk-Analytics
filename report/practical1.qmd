---
title: "TA1"
author: "Quentin"
date: "2023-10-12"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
```


```{r, echo = FALSE, message = FALSE, warning=FALSE}
source(here::here("script/setup.R"))
```

# Part 1: financial returns and normality 
## (a) Read in the data and assess the stationarity of the raw stock indices.  
We are going to use two methods. The first one, is to visualize the stock indices over time to get a sense of whether they appear stationary or not; using `plot()`.
```{r}
# Create interactive plots for each index
plot_sp500 <- plot_ly(x = sp500.df$DATE, y = sp500.df$SP500, type = "scatter", mode = "lines", name = "SP500") %>%
  layout(title = "SP500")

plot_cac40 <- plot_ly(x = cac40.df$DATE, y = cac40.df$CAC40, type = "scatter", mode = "lines", name = "CAC40") %>%
  layout(title = "CAC40")

plot_nasdaq <- plot_ly(x = nasdaq.df$DATE, y = nasdaq.df$NASDAQ, type = "scatter", mode = "lines", name = "Nasdaq") %>%
  layout(title = "Nasdaq")

plot_nikkei <- plot_ly(x = nikkei.df$DATE, y = nikkei.df$NIKKEI, type = "scatter", mode = "lines", name = "NIKKEI") %>%
  layout(title = "NIKKEI")

combined_plot <- subplot(plot_sp500, plot_cac40, plot_nasdaq, plot_nikkei, nrows = 2)

# Set a common title for the entire grid
combined_plot <- layout(combined_plot, title = "Comparison of Stock Indices")

# Show the combined plot
combined_plot

```
It appears that none of the stock indices are stationary based on the plots generated. These plots clearly show the presence of trends, which are a strong indicator of non-stationarity data. For instance, if we take the NASDAQ index as an example, it exhibits a noticeable upward trend between 1999 and the beginning of 2000.

Another common approach is to use the Augmented-Dickey-Fuller (ADF) test. If we can reject the null hypothesis (p-value < 0.05), then we can consider the time-series to be stationary. The null hypothesis of this test is that the time series is non-stationary. If the p-value is less than your significance level, you can reject the null hypothesis and consider the series stationary.

```{r}
# ADF - Test 
adf_test_sp500 <- adf.test(sp500$SP500) ; adf_test_sp500
adf_test_nasdaq <- adf.test(nasdaq$NASDAQ) ; adf_test_nasdaq
adf_test_cac40 <- adf.test(cac40$CAC40) ; adf_test_cac40
adf_test_nikkei <- adf.test(nikkei$NIKKEI) ; adf_test_nikkei
```

We can't reject any of the null hypothesis, implying that we do not have enough evidence to conclude that the data is stationary.

## (b) Create a function to transform the daily stock indices into their daily negative log returns counterparts. Plot the latter series and assess their stationarity. To compare the series, also plot the negative log returns on a common scale to all indices.

```{r}
# Define a function to calculate negative log returns
calculate_log_returns <- function(stocks) {
  log_returns <- -diff(log(stocks))
  return(log_returns)
}
# Calculate negative log returns for each index
log_returns_sp500 <- calculate_log_returns(sp500)
log_returns_cac40 <- calculate_log_returns(cac40)
log_returns_nasdaq <- calculate_log_returns(nasdaq)
log_returns_nikkei <- calculate_log_returns(nikkei)
# We need to transform the index of rows as a separate variable to include the date into the plots: we create a function
log_returns_sp500$Dates <- rownames(log_returns_sp500)
log_returns_sp500.df <- data.frame(log_returns_sp500)
log_returns_cac40$Dates <- rownames(log_returns_cac40)
log_returns_cac40.df <- data.frame(log_returns_cac40)
log_returns_nasdaq$Dates <- rownames(log_returns_nasdaq)
log_returns_nasdaq.df <- data.frame(log_returns_nasdaq)
log_returns_nikkei$Dates <- rownames(log_returns_nikkei)
log_returns_nikkei.df <- data.frame(log_returns_nikkei)
# Plot for SP500
plot_sp5002 <- plot_ly(x = log_returns_sp500.df$Dates, y = log_returns_sp500, type = "scatter", mode = "lines", name = "SP500") %>% layout(title = "SP500 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_sp500), y0 = 0, y1 = 0, line = list(color = "red"))))

# Plot for CAC40
plot_cac402 <- plot_ly(x = log_returns_cac40.df$Dates, y = log_returns_cac40, type = "scatter", mode = "lines", name = "CAC40") %>% layout(title = "CAC40 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_cac40), y0 = 0, y1 = 0, line = list(color = "red"))))

# Plot for Nasdaq
plot_nasdaq2 <- plot_ly(x = log_returns_nasdaq.df$Dates , y = log_returns_nasdaq, type = "scatter", mode = "lines", name = "Nasdaq") %>% layout(title = "Nasdaq Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nasdaq), y0 = 0, y1 = 0, line = list(color = "red"))))

# Plot for NIKKEI
plot_nikkei2 <- plot_ly(x = log_returns_nikkei.df$Dates , y = log_returns_nikkei, type = "scatter", mode = "lines", name = "NIKKEI") %>% layout(title = "Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nikkei), y0 = 0, y1 = 0, line = list(color = "red"))))

# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
combined_plot2 <- layout(combined_plot2, title = "Comparison of negative log return of Stock Indices (same scale)")
# Show the combined plot
combined_plot2

```
Looking at the comparison of negative logarithm return of the stock indices, we discern the following: 
- mean is not constant: not centered around 0, implying that there is a long-term trend in the indexes.
- variance is not constant: there are clear upward/downward trends. SP500 has very high spikes, such as the one in 1997-10-27.

Therefore, graphically, the indexes seem to be non-stationary. Moreover, we should check test ADF. 


```{r}
#QUESTION C)

# Set the number of histogram bins
num_bins <- 30


# Create a common scale for the histograms
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots

# Plot histograms and overlay Normal distribution curves
hist(log_returns_sp500, breaks = num_bins, main = "Histogram - SP500 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_sp500), sd = sd(log_returns_sp500)), col = "blue", lwd = 2, add = TRUE)

hist(log_returns_cac40, breaks = num_bins, main = "Histogram - CAC40 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_cac40), sd = sd(log_returns_cac40)), col = "blue", lwd = 2, add = TRUE)

hist(log_returns_nasdaq, breaks = num_bins, main = "Histogram - Nasdaq Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nasdaq), sd = sd(log_returns_nasdaq)), col = "blue", lwd = 2, add = TRUE)

hist(log_returns_nikkei, breaks = num_bins, main = "Histogram - NIKKEI Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nikkei), sd = sd(log_returns_nikkei)), col = "blue", lwd = 2, add = TRUE)

# Reset the plot layout
par(mfrow = c(1, 1))


```
By comparing it to a normal distribution, we can notice several pieces of information.

SP500: Lots of values close to 0, which corresponds to the observations we've made on the negative log returns.
CAC40: A bit heavy-tailed, but close to a normal distribution.
Nasdaq: Right-skewed, which might indicate the presence of more extreme values on the right side. The tails also look heavier than all other indices.
Nikkei: Seem to be the closest to a Normal Distribution.

To confirm those observations, we will need analysis tools which we will use further in this document.


```{r}
#QUESTION D)

# Create QQ-plots for log returns

par(mfrow = c(2, 2))  # Create a 2x2 grid of plots

qqnorm(log_returns_sp500, main = "QQ-Plot - SP500 Log Returns")
qqline(log_returns_sp500)
qqnorm(log_returns_cac40, main = "QQ-Plot - CAC40 Log Returns")
qqline(log_returns_cac40)
qqnorm(log_returns_nasdaq, main = "QQ-Plot - Nasdaq Log Returns")
qqline(log_returns_nasdaq)
qqnorm(log_returns_nikkei, main = "QQ-Plot - NIKKEI Log Returns")
qqline(log_returns_nikkei)
```
As we can see from the QQ-plots, data points are all heavily deviating from the line, which indicates that the indices cannot be estimated by a normal distribution, thus underestimating the extreme values. In the Nasdaq plot, for example, we can see the most extreme value from negative log returns on the left side. One thing to note is that these plot don't have the same scale. This hsows once again the high variation from Nasdaq, but from all other indices as well.



```{r}
#QUESTION E)


# Perform Anderson-Darling test for normality
ad_test_sp500 <- ad.test(log_returns_sp500)
ad_test_cac40 <- ad.test(log_returns_cac40)
ad_test_nasdaq <- ad.test(log_returns_nasdaq)
ad_test_nikkei <- ad.test(log_returns_nikkei)

# Print the results
print(ad_test_sp500)
print(ad_test_cac40)
print(ad_test_nasdaq)
print(ad_test_nikkei)

```

In each case, the p-value is extremely close to zero (p-value < 2.2e-16), which indicates strong evidence against the null hypothesis that the data follows a normal distribution.The test statistics are relatively large, further indicating that the data significantly deviates from a normal distribution.Based on the p-values and test statistics, we can conclude that the negative log returns for each of the stock indices (SP500, CAC40, Nasdaq, NIKKEI) do not follow a normal distribution. Instead, they exhibit departures from normality.



```{r}
# QUESTION F)
# Remove missing values from log return datasets
log_returns_sp500 <- log_returns_sp500[!is.na(log_returns_sp500)]
log_returns_cac40 <- log_returns_cac40[!is.na(log_returns_cac40)]
log_returns_nasdaq <- log_returns_nasdaq[!is.na(log_returns_nasdaq)]
log_returns_nikkei <- log_returns_nikkei[!is.na(log_returns_nikkei)]

# Fit distributions : normal
fit_sp500 <- fitdistr(log_returns_sp500, "normal")
fit_cac40 <- fitdistr(log_returns_cac40, "normal")
fit_nasdaq <- fitdistr(log_returns_nasdaq, "normal")
fit_nikkei <- fitdistr(log_returns_nikkei, "normal")

# Fit a t-distribution to log returns
fit_sp500_t <- fitdistr(log_returns_sp500, "t")
fit_cac40_t <- fitdistr(log_returns_cac40, "t")
fit_nasdaq_t <- fitdistr(log_returns_nasdaq, "t")
fit_nikkei_t <- fitdistr(log_returns_nikkei, "t")

# Calculate AIC for each distribution
aic_sp500 <- AIC(fit_sp500)
aic_cac40 <- AIC(fit_cac40)
aic_nasdaq <- AIC(fit_nasdaq)
aic_nikkei <- AIC(fit_nikkei)

# Calculate AIC for each distribution
aic_sp500_t <- AIC(fit_sp500_t)
aic_cac40_t <- AIC(fit_cac40_t)
aic_nasdaq_t <- AIC(fit_nasdaq_t)
aic_nikkei_t <- AIC(fit_nikkei_t)

# Create a data frame to store AIC values
aic_data <- data.frame(
  Index = c("SP500", "CAC40", "NASDAQ", "NIKKEI"),
  Normal = c(aic_sp500, aic_cac40, aic_nasdaq, aic_nikkei),
  T_Distribution = c(aic_sp500_t, aic_cac40_t, aic_nasdaq_t, aic_nikkei_t)
)

# Print the AIC data frame
print(aic_data)

# Create a bar plot of AIC values
barplot(
  t(as.matrix(aic_data[, -1])),
  beside = TRUE,
  col = c("blue", "red"),
  names.arg = aic_data$Index,
  main = "AIC Comparison of Distributions",
  xlab = "Index",
  ylab = "AIC Value",
  legend.text = c("Normal", "T-Distribution"),
  args.legend = list(x = "topright", bty = "n")
)
```
For the 4 indices, even though the difference is minimal compared to the scale, the Student distribution is systematically better than the Normal distribution (the AIC value is lower).

As a result, we will continue analyzing the indices with the Student distribution.


```{r}
#QUESTION G)

par(mfrow = c(2, 2))  # Create a 2x2 grid of plots

# Create QQ-plots for t-distributions
qqnorm(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]), main = "QQ-Plot - SP500 Log Returns (t-dist)")
qqline(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]))

qqnorm(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]), main = "QQ-Plot - CAC40 Log Returns (t-dist)")
qqline(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]))

qqnorm(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]), main = "QQ-Plot - Nasdaq Log Returns (t-dist)")
qqline(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]))

qqnorm(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]), main = "QQ-Plot - NIKKEI Log Returns (t-dist)")
qqline(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]))

```




```{r}
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))

#QUESTION A)

# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(sp500, main = "ACF of S&P 500 Index")

# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(cac40, main = "ACF of CAC 40 Index")

# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")

# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nikkei, main = "ACF of Nikkei Index")
```

```{r}
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))

#QUESTION A)

# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_sp500, main = "ACF of S&P 500 Index")

# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_cac40, main = "ACF of CAC 40 Index")

# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nasdaq, main = "ACF of NASDAQ Index")

# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nikkei, main = "ACF of Nikkei Index")
```

By plotting the raw series, we cannot say anything since all values are auto correlated with one another.

Plotting the negative log returns, none of the values seem to be closely auto correlated with the initial measure, though there are some outliers.


```{r}
#QUESTION B)

#Doing Box-Ljung procedures for all indices
Box.test(sp500, type = "Ljung-Box")
Box.test(cac40, type = "Ljung-Box")
Box.test(nasdaq, type = "Ljung-Box")
Box.test(nikkei, type = "Ljung-Box")

```
The null hypothesis of the Ljung-Box test is that the residuals are independent (i.e., no autocorrelation). From these results, we can see that all 4 indices show a very small p-value (<2.2e-16) and that they are not independent. 

We therefore reject the null hypothesis.

```{r}

#Doing Box-Ljung procedures for all indices
Box.test(log_returns_sp500, type = "Ljung-Box")
Box.test(log_returns_cac40, type = "Ljung-Box")
Box.test(log_returns_nasdaq, type = "Ljung-Box")
Box.test(log_returns_nikkei, type = "Ljung-Box")

```

Using the negative log-returns, we have high p-values, meaning that we can't reject the hypothesis that the data points are auto-correlated (i.e independent).

However, it's almost not the case for the Nikkei index, as it's p-value is almost 0.05. Therefore, it's the one that appears to have the less autocorrelation. 

(c) Propose ARIMA models for each of the negative log returns series, based on visualisation tools (e.g. ACF and PACF). Select an ARIMA model using auto.arima() (forecast package) to each of the negative log returns series. Comment on the difference. Assess the residuals of the resulting models.

In order to select the order of the 
```{r}
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))


par(mar = c(5, 4, 3, 2))
pacf(log_returns_sp500)

par(mar = c(5, 4, 3, 2))
pacf(log_returns_cac40)

par(mar = c(5, 4, 3, 2))
pacf(log_returns_nasdaq)

par(mar = c(5, 4, 3, 2))
pacf(log_returns_nikkei)

```
(c) Propose ARIMA for the negative log returns. 
```{r}
## ADF FOR SP500 
adf.test(log_returns_sp500)

## ADF FOR CAC40
adf.test(log_returns_cac40)

## ADF FOR NASDAQ
adf.test(log_returns_nasdaq)

## ADF FOR NIKKEI
adf.test(log_returns_nikkei)



```
 d = 0, no need to differentiate as p-value < 0.05 makes sense (to comment)

```{r}
## ARIMA SP500
Arima(log_returns_sp500, order = c(8,0,7))
## ARIMA CAC40
Arima(log_returns_cac40, order = c(5,0,5))
## ARIMA NASDAQ
Arima(log_returns_nasdaq, order = c(7,0,7))
## ARIMA NIKKEI
Arima(log_returns_nikkei, order = c(1,0,1))



```


```{r}

model_sp500 <- auto.arima(log_returns_sp500)# better the auto with parameters: ARIMA(2,0,1) non-zero mean 
print(model_sp500)
auto.arima(log_returns_cac40) # better the auto with parameters: ARIMA(0,0,0) zero-mean 
auto.arima(log_returns_nasdaq)# better the auto with parameters: ARIMA(2,0,2) with zero mean 
auto.arima(log_returns_nikkei)# better the auto with parameters: ARIMA(2,0,1) with zero mean 



```

Assess the residuals:
```{r}
# Example for assessing residuals of the S&P 500 ARIMA model
residuals_sp500 <- residuals(model_sp500)
residuals_cac40 <- residuals(model_cac40)
residuals_nikkei <- residuals(model_nikkei)

# Ljung-Box test for autocorrelation in residuals
Box.test(residuals_sp500, lag = 30 , type = "Ljung") # almost significant means may indicate that the ARIMA model can be improved ()
# 
```















