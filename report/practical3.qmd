---
title: "TP3_RA"
output: html_document
date: "2023-11-30"
---


```{r}
source(here::here("script/setup.R"))
```

# Part 1

## (a) Read in the data and select only the winter temperature data. You can use the code lines of the file GetData.R to get the data and select only the winter values.

```{r}
##### Download daily NAO measurements
NAO.daily <- 
  fread('ftp://ftp.cdc.noaa.gov/Public/gbates/teleconn/nao.reanalysis.t10trunc.1948-present.txt')
NAO.daily <- as.matrix(NAO.daily)
colnames(NAO.daily) <- c("year","month","day","NAO")

##### Download temperature data: be sure to work in the correct directory
months <- c(12,1,2) #keep only winter observations
temp_max_Zermatt           <- read_delim(here::here("data/practical_3/daily_maximum_Zermatt/order_107669_data.txt"), 
                                         ";", escape_double = FALSE, col_types = 
                                           cols(time = col_number()), 
                                         trim_ws = TRUE, skip = 1)

colnames(temp_max_Zermatt) <- c("station","time","temp")
temp_max_Zermatt           <- temp_max_Zermatt[-1,]
temp_max_Zermatt[,2]       <- as.Date(apply(temp_max_Zermatt[,2],1,as.character),
                                      "%Y%m%d")

temp_max_Montana           <- read_delim(here::here("data/practical_3/daily_maximum_Montana/order_107668_data.txt"), 
                                         ";", escape_double = FALSE, col_types = 
                                           cols(time = col_number()), 
                                         trim_ws = TRUE, skip = 1)

colnames(temp_max_Montana) <- c("station","time","temp")
temp_max_Montana           <- temp_max_Montana[-1,]
temp_max_Montana[,2]       <- as.Date(apply(temp_max_Montana[,2],1,as.character),
                                      "%Y%m%d")

###match the dates of the two time series
temp_max_Montana           <- temp_max_Montana[match(as.matrix(temp_max_Zermatt[,2]),
                                                     as.matrix(temp_max_Montana[,2])),]
temp_max_Montana           <- as.matrix(temp_max_Montana)
colnames(temp_max_Montana) <- c("station","time","temp")
temp_max_Zermatt           <- as.matrix(temp_max_Zermatt)
colnames(temp_max_Zermatt) <- c("station","time","temp")

###keep only winter dates
temp_max_Montana <- temp_max_Montana[which(month(as.POSIXlt(temp_max_Montana[,"time"], 
                                                            format="%Y-%m-%d")) %in% months),]
temp_max_Zermatt <- temp_max_Zermatt[which(month(as.POSIXlt(temp_max_Zermatt[,"time"], 
                                                            format="%Y-%m-%d")) %in% months),]


Date       <- function( length = 0 ){
  newDate = numeric( length )
  class(newDate) = "Date"
  return(newDate)
}

season_day                   <- yday(as.Date(temp_max_Montana[,2]))
season_day[season_day < 61]  <- season_day[season_day < 61] + 31
season_day[season_day > 334] <- season_day[season_day > 334]- 334

NAO.date <- Date(nrow(NAO.daily))
for(i in 1:nrow(NAO.daily)){
  NAO.date[i] <- as.Date(paste(as.character(NAO.daily[i,1]),"-",as.character(NAO.daily[i,2]),
                               "-",as.character(NAO.daily[i,3]),sep=""),format="%Y-%m-%d")
}
NAO.daily <- mutate(as.tibble(NAO.daily), date = make_date(year, month, day))

index <- as.Date(intersect(as.Date(temp_max_Montana[,2]),as.Date(NAO.date)))

nao <- NAO.daily[which(NAO.daily$date %in% index), 4]
nao <- as.vector(nao)

#Montana
x_Montana          <- data.frame("time"=temp_max_Montana[,2],
                                 "nao"=nao,
                                 "d"=season_day,
                                 "temp"=temp_max_Montana[,3])

as.numeric.factor  <- function(x) {as.numeric(levels(x))[x]}
x_Montana[,"temp"] <- as.numeric(x_Montana[,"temp"])
x_Montana[,"time"] <- as.numeric(year(as.POSIXlt(x_Montana[,"time"], format="%Y-%m-%d")))
x_Montana[,"time"] <- (x_Montana[,"time"]-min(x_Montana[,"time"]))/(max(x_Montana[,"time"])-
                                                                      min(x_Montana[,"time"]))

#Zermatt
x_Zermatt          <- data.frame("time"=temp_max_Zermatt[,2],
                                 "nao"=nao,
                                 "d"=season_day,
                                 "temp"=temp_max_Zermatt[,3])

as.numeric.factor  <- function(x) {as.numeric(levels(x))[x]}
x_Zermatt[,"temp"] <- as.numeric(x_Zermatt[,"temp"])
x_Zermatt[,"time"] <- as.numeric(year(as.POSIXlt(x_Zermatt[,"time"], format="%Y-%m-%d")))
x_Zermatt[,"time"] <- (x_Zermatt[,"time"]-min(x_Zermatt[,"time"]))/(max(x_Zermatt[,"time"])-
                                                                      min(x_Zermatt[,"time"]))

Z <- data.frame("Montana"=x_Montana[,"temp"] , "Zermatt"=x_Zermatt[,"temp"], "NAO"=x_Zermatt[,"NAO"])
```

## (b) Represent the data and especially scatterplots of Zermatt values against Montana's values. Same with Montana values against NAO values. Comment.
::: panel-tabset
## Scatterplot Zermatt vs Montana temperature
```{r}
# Scatterplot of Zermatt values against Montana values
plot(Z$Montana, Z$Zermatt, xlab = "Montana Temperature", ylab = "Zermatt Temperature", 
     main = "Zermatt vs Montana Temperatures")
abline(lm(Z$Zermatt ~ Z$Montana), col = "red") 
legend("topright", 
       legend = "Fitted Regression Line", 
       col = "red", 
       lty = 1, 
       cex = 0.8)
```

## Scatterplot Montana temperature vs NAO values 
```{r}
# Scatterplot of Montana values against NAO values
plot(Z$Montana, Z$NAO, xlab = "Montana Temperature", ylab = "NAO Index", 
     main = "Montana Temperature vs NAO Index")
abline(lm(Z$NAO ~ Z$Montana), col = "red") # Add a linear regression line
legend("topright", 
       legend = "Fitted Regression", 
       col = "red", 
       lty = 1, 
       cex = 0.8)
```
:::

-   **Zermatt vs Montana Temperatures**: scatterplot displays a discernible pattern, indicating a positive correlation between the temperatures in Zermatt and Montana. The red line, which delineates the linear regression model applied to the data, closely follows the trajectory of the data points. This suggests a robust positive linear association between the temperatures recorded in the two regions.

-   **Montana Temperature vs NAO Index:** scatterplot presents a dense concentration of data points that do exhibit a slight upward trend. The red line, which represents the fitted linear regression model, appears to be horizontal, suggesting little linear relationship between the temperature in Montana and the NAO Index. The slightly positive slope in the regression line implies that, based on this model, changes in the NAO Index correspond to predictable or significant changes in Montana's temperature. This could indicate that the NAO Index may be a predictor of temperature in Montana. 

## (c) Test the correlation between these two pairs of series.
::: panel-tabset
## Zermatt vs Montana
```{r}
cor_Zermatt_Montana <- cor(Z$Zermatt, Z$Montana)
cat("Correlation between Zermatt and Montana Temperatures:", cor_Zermatt_Montana, "\n")
cor.test(Z$Zermatt, Z$Montana)
```

## Montana temperature vs NAO values 
```{r}
# Correlation between Montana Temperatures and NAO Index
cor_Montana_NAO <- cor(Z$Montana, Z$NAO)
cat("Correlation between Montana Temperatures and NAO Index:", cor_Montana_NAO, "\n")
# correlation test 
cor.test(Z$Montana, Z$NAO) # significant 

```
:::

- Correlation between Montana and Zermatt temperatures: Correlation test reveals a notably strong positive correlation between the temperatures in Zermatt and Montana, confirming expectations of a close relationship. 
- Correaltion between Montana and NAO: Correlation is significant and still around 25%. However, both of `cor.test` are signficant. 

## (d) Now concentrate on the extreme level and tail dependence. Represent χ and χ̄ for two pairs of series (Montana vs Zermatt and Montana vs NAO). You may want to use the function chiplot of the package evd. What do you observe? 

```{r}
# Create a data frame for Zermatt vs Montana Temperatures
data_Zermatt_Montana <- data.frame(Zermatt = Z$Zermatt, Montana = Z$Montana)

# Chi Plot - Zermatt vs Montana Temperatures
chiplot(data_Zermatt_Montana, main1 = "Chi Plot - Zermatt vs Montana Temperatures")

# Create a data frame for Montana Temperatures vs NAO Index
data_Montana_NAO <- data.frame(Montana = Z$Montana, NAO = Z$NAO)

# Chi Plot - Montana Temperatures vs NAO Index
chiplot(data_Montana_NAO, main1 = "Chi Plot - Montana Temperatures vs NAO Index")

```

From the chi bar plot of Zermatt and Montana temperatures, we notice the presence of asymptotic dependence which means the simultaneous dependence between their extreme values. The line significantly deviate from zero from the first quantile to the last (lambda reaches 1), and suggests that Zermatt and Montana show tail dependence.  

Nonetheless, the chi bar plot of Montana temperatures and Nao indices doesn't exhibit asymptotic dependence (lambda equal to 0) as the line gravitate around 0. This means that there is no tail dependence between the two variables and that they do not exhibit extreme values simultaneously.


if the chi bar statistic approaches zero as the quantile approaches 1, it would suggest asymptotic independence because a chi bar of zero would indicate no dependence at that quantile

