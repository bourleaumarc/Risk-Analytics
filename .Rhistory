# Create QQ-plots for log returns
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
qqnorm(log_returns_sp500, main = "QQ-Plot - SP500 Log Returns")
qqline(log_returns_sp500)
qqnorm(log_returns_cac40, main = "QQ-Plot - CAC40 Log Returns")
qqline(log_returns_cac40)
qqnorm(log_returns_nasdaq, main = "QQ-Plot - Nasdaq Log Returns")
qqline(log_returns_nasdaq)
qqnorm(log_returns_nikkei, main = "QQ-Plot - NIKKEI Log Returns")
qqline(log_returns_nikkei)
# Check if points on the QQ-plots deviate significantly from the line : OUI POUR TOUS
#QUESTION E)
library(nortest)
# Perform Anderson-Darling test for normality
ad_test_sp500 <- ad.test(log_returns_sp500)
ad_test_cac40 <- ad.test(log_returns_cac40)
ad_test_nasdaq <- ad.test(log_returns_nasdaq)
ad_test_nikkei <- ad.test(log_returns_nikkei)
# Print the results
print(ad_test_sp500)
print(ad_test_cac40)
print(ad_test_nasdaq)
print(ad_test_nikkei)
# Check the p-values. If p-value < 0.05, you can reject the normality hypothesis.
#Interpretation: In each case, the p-value is extremely close to zero (p-value < 2.2e-16), which indicates strong evidence against the null hypothesis that the data follows a normal distribution.The test statistics (A) are relatively large, further indicating that the data significantly deviates from a normal distribution.Based on the p-values and test statistics, you can conclude that the negative log returns for each of the stock indices (SP500, CAC40, Nasdaq, NIKKEI) do not follow a normal distribution. Instead, they exhibit departures from normality.This departure from normality is common in financial data, where factors like volatility, non-linearity, and extreme events can lead to non-Normal distributions.
# QUESTION F)
library(MASS)
# Remove missing values from log return datasets
log_returns_sp500 <- log_returns_sp500[!is.na(log_returns_sp500)]
log_returns_cac40 <- log_returns_cac40[!is.na(log_returns_cac40)]
log_returns_nasdaq <- log_returns_nasdaq[!is.na(log_returns_nasdaq)]
log_returns_nikkei <- log_returns_nikkei[!is.na(log_returns_nikkei)]
# Fit distributions : normal
fit_sp500 <- fitdistr(log_returns_sp500, "normal")
fit_cac40 <- fitdistr(log_returns_cac40, "normal")
fit_nasdaq <- fitdistr(log_returns_nasdaq, "normal")
fit_nikkei <- fitdistr(log_returns_nikkei, "normal")
# Fit a t-distribution to log returns
fit_sp500_t <- fitdistr(log_returns_sp500, "t")
fit_cac40_t <- fitdistr(log_returns_cac40, "t")
fit_nasdaq_t <- fitdistr(log_returns_nasdaq, "t")
fit_nikkei_t <- fitdistr(log_returns_nikkei, "t")
# QUESTION F)
library(MASS)
# Remove missing values from log return datasets
log_returns_sp500 <- log_returns_sp500[!is.na(log_returns_sp500)]
log_returns_cac40 <- log_returns_cac40[!is.na(log_returns_cac40)]
log_returns_nasdaq <- log_returns_nasdaq[!is.na(log_returns_nasdaq)]
log_returns_nikkei <- log_returns_nikkei[!is.na(log_returns_nikkei)]
# Fit distributions : normal
fit_sp500 <- fitdistr(log_returns_sp500, "normal")
fit_cac40 <- fitdistr(log_returns_cac40, "normal")
fit_nasdaq <- fitdistr(log_returns_nasdaq, "normal")
fit_nikkei <- fitdistr(log_returns_nikkei, "normal")
# Fit a t-distribution to log returns
fit_sp500_t <- fitdistr(log_returns_sp500, "t")
fit_cac40_t <- fitdistr(log_returns_cac40, "t")
fit_nasdaq_t <- fitdistr(log_returns_nasdaq, "t")
fit_nikkei_t <- fitdistr(log_returns_nikkei, "t")
# Calculate AIC for each distribution
aic_sp500 <- AIC(fit_sp500)
aic_cac40 <- AIC(fit_cac40)
aic_nasdaq <- AIC(fit_nasdaq)
aic_nikkei <- AIC(fit_nikkei)
# Calculate AIC for each distribution
aic_sp500_t <- AIC(fit_sp500_t)
aic_cac40_t <- AIC(fit_cac40_t)
aic_nasdaq_t <- AIC(fit_nasdaq_t)
aic_nikkei_t <- AIC(fit_nikkei_t)
# Print AIC values and compare the distributions
print(aic_sp500)
print(aic_cac40)
print(aic_nasdaq)
print(aic_nikkei)
# Print AIC values and compare the distributions
print(aic_sp500_t)
print(aic_cac40_t)
print(aic_nasdaq_t)
print(aic_nikkei_t)
#for each indices, the normal distribution has a lower AIC meaning that its a better fit.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#for each indices, the normal distribution has a lower AIC meaning that its a better fit.
```
#for each indices, the normal distribution has a lower AIC meaning that its a better fit.
```
# Create a data frame to store AIC values
aic_data <- data.frame(
Index = c("SP500", "CAC40", "NASDAQ", "NIKKEI"),
Normal = c(aic_sp500, aic_cac40, aic_nasdaq, aic_nikkei),
T_Distribution = c(aic_sp500_t, aic_cac40_t, aic_nasdaq_t, aic_nikkei_t)
)
# Print the AIC data frame
print(aic_data)
# Create a bar plot of AIC values
barplot(
t(as.matrix(aic_data[, -1])),
beside = TRUE,
col = c("blue", "red"),
names.arg = aic_data$Index,
main = "AIC Comparison of Distributions",
xlab = "Index",
ylab = "AIC Value",
legend.text = c("Normal", "T-Distribution"),
args.legend = list(x = "topright", bty = "n")
)
# QUESTION F)
library(MASS)
# Remove missing values from log return datasets
log_returns_sp500 <- log_returns_sp500[!is.na(log_returns_sp500)]
log_returns_cac40 <- log_returns_cac40[!is.na(log_returns_cac40)]
log_returns_nasdaq <- log_returns_nasdaq[!is.na(log_returns_nasdaq)]
log_returns_nikkei <- log_returns_nikkei[!is.na(log_returns_nikkei)]
# Fit distributions : normal
fit_sp500 <- fitdistr(log_returns_sp500, "normal")
fit_cac40 <- fitdistr(log_returns_cac40, "normal")
fit_nasdaq <- fitdistr(log_returns_nasdaq, "normal")
fit_nikkei <- fitdistr(log_returns_nikkei, "normal")
# Fit a t-distribution to log returns
fit_sp500_t <- fitdistr(log_returns_sp500, "t")
fit_cac40_t <- fitdistr(log_returns_cac40, "t")
fit_nasdaq_t <- fitdistr(log_returns_nasdaq, "t")
fit_nikkei_t <- fitdistr(log_returns_nikkei, "t")
# Calculate AIC for each distribution
aic_sp500 <- AIC(fit_sp500)
aic_cac40 <- AIC(fit_cac40)
aic_nasdaq <- AIC(fit_nasdaq)
aic_nikkei <- AIC(fit_nikkei)
# Calculate AIC for each distribution
aic_sp500_t <- AIC(fit_sp500_t)
aic_cac40_t <- AIC(fit_cac40_t)
aic_nasdaq_t <- AIC(fit_nasdaq_t)
aic_nikkei_t <- AIC(fit_nikkei_t)
# Create a data frame to store AIC values
aic_data <- data.frame(
Index = c("SP500", "CAC40", "NASDAQ", "NIKKEI"),
Normal = c(aic_sp500, aic_cac40, aic_nasdaq, aic_nikkei),
T_Distribution = c(aic_sp500_t, aic_cac40_t, aic_nasdaq_t, aic_nikkei_t)
)
# Print the AIC data frame
print(aic_data)
# Create a bar plot of AIC values
barplot(
t(as.matrix(aic_data[, -1])),
beside = TRUE,
col = c("blue", "red"),
names.arg = aic_data$Index,
main = "AIC Comparison of Distributions",
xlab = "Index",
ylab = "AIC Value",
legend.text = c("Normal", "T-Distribution"),
args.legend = list(x = "topright", bty = "n")
)
curve(x, mean = 0, sd = 0,01, col = "blue", lwd = 2, add = TRUE)
curve(dnorm(x, mean = 0, sd = 0,01, col = "blue", lwd = 2, add = TRUE))
#QUESTION C)
# Set the number of histogram bins
num_bins <- 30
# Create a common scale for the histograms
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# Plot histograms and overlay Normal distribution curves
hist(log_returns_sp500, breaks = num_bins, main = "Histogram - SP500 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_sp500), sd = sd(log_returns_sp500)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_cac40, breaks = num_bins, main = "Histogram - CAC40 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_cac40), sd = sd(log_returns_cac40)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_nasdaq, breaks = num_bins, main = "Histogram - Nasdaq Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nasdaq), sd = sd(log_returns_nasdaq)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_nikkei, breaks = num_bins, main = "Histogram - NIKKEI Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nikkei), sd = sd(log_returns_nikkei)), col = "blue", lwd = 2, add = TRUE)
# Reset the plot layout
par(mfrow = c(1, 1))
#QUESTION G)
qqplot(fit_sp500_t)
#QUESTION G)
# Create QQ-plots for t-distributions
qqnorm(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]), main = "QQ-Plot - SP500 Log Returns (t-dist)")
qqline(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]))
qqnorm(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]), main = "QQ-Plot - CAC40 Log Returns (t-dist)")
qqline(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]))
qqnorm(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]), main = "QQ-Plot - Nasdaq Log Returns (t-dist)")
qqline(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]))
qqnorm(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]), main = "QQ-Plot - NIKKEI Log Returns (t-dist)")
qqline(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]))
#QUESTION G)
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# Create QQ-plots for t-distributions
qqnorm(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]), main = "QQ-Plot - SP500 Log Returns (t-dist)")
qqline(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]))
qqnorm(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]), main = "QQ-Plot - CAC40 Log Returns (t-dist)")
qqline(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]))
qqnorm(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]), main = "QQ-Plot - Nasdaq Log Returns (t-dist)")
qqline(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]))
qqnorm(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]), main = "QQ-Plot - NIKKEI Log Returns (t-dist)")
qqline(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]))
#QUESTION A)
plot(acf(log_returns_sp500))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
#Plotting the NLG's ACF
plot(acf(log_returns_sp500))
plot(acf(log_returns_cac40))
plot(acf(log_returns_nasdaq))
plot(acf(log_returns_nikkei))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
par(mfrow = c(1, 1))  # Reset
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#Plotting the NLG's ACF
plot(acf(log_returns_sp500))
plot(acf(log_returns_cac40))
plot(acf(log_returns_nasdaq))
plot(acf(log_returns_nikkei))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#Plotting the NLG's ACF
plot(acf(log_returns_sp500))
plot(acf(log_returns_cac40))
plot(acf(log_returns_nasdaq))
plot(acf(log_returns_nikkei))
#Part 2
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
plot(acf(sp500))
plot(acf(cac40))
plot(acf(nasdaq))
plot(acf(nikkei))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
#Plotting the Raw series' ACF
acf(sp500)
acf(cac40)
acf(nasdaq)
acf(nikkei)
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
# Plot ACF for the S&P 500 index
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index
acf(nikkei, main = "ACF of Nikkei Index")
#QUESTION A)
# Plot ACF for the S&P 500 index
acf(sp500, main = "ACF of S&P 500 Index", mar = c(5, 4, 4, 2))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
# Plot ACF for the S&P 500 index
acf(sp500, main = "ACF of S&P 500 Index", mar = c(5, 4, 6, 2))
# Plot ACF for the CAC 40 index
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
#QUESTION A)
# Plot ACF for the S&P 500 index
acf(sp500, main = "ACF of S&P 500 Index", mar = c(5, 4, 4, 4))
# Plot ACF for the CAC 40 index
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 3, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 3, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# Adjust the size of the overall plotting area
par(mai = c(1, 1, 1, 1))
# Plot ACF for the S&P 500 index
acf(sp500, main = "S&P 500 ACF", cex.main = 0.7)
# Plot ACF for the CAC 40 index
acf(cac40, main = "CAC 40 ACF", cex.main = 0.7)
# Plot ACF for the NASDAQ index
acf(nasdaq, main = "NASDAQ ACF", cex.main = 0.7)
# Plot ACF for the Nikkei index
acf(nikkei, main = "Nikkei ACF", cex.main = 0.7)
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 3, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nikkei, main = "ACF of Nikkei Index")
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 3, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(log_returns_sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(log_returns_cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(log_returns_nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(log_returns_nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 2, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 4, 2))
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 2, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 2, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 2, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 2, 2))
acf(nikkei, main = "ACF of Nikkei Index")
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nikkei, main = "ACF of Nikkei Index")
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nikkei, main = "ACF of Nikkei Index")
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nikkei, main = "ACF of Nikkei Index")
#QUESTION B)
Box.test(sp500, type = "Ljung-Box")
Box.test(cac40, type = "Ljung-Box")
Box.test(nasdaq, type = "Ljung-Box")
Box.test(nikkei, type = "Ljung-Box")
#QUESTION B)
#Doing Box-Ljung procedures for all indices
Box.test(log_returns_sp500, type = "Ljung-Box")
Box.test(log_returns_cac40, type = "Ljung-Box")
Box.test(log_returns_nasdaq, type = "Ljung-Box")
Box.test(log_returns_nikkei, type = "Ljung-Box")
