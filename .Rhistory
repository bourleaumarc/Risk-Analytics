# # Plot for Nasdaq
# plot(log_returns_nasdaq, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "Nasdaq", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for NIKKEI
# plot(log_returns_nikkei, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "NIKKEI", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Reset the plot layout
# par(mfrow = c(1, 1))
# Plot for SP500
plot_sp5002 <- plot_ly(x = 1:length(log_returns_sp500), y = log_returns_sp500, type = "scatter", mode = "lines", name = "SP500") %>% layout(title = "SP500 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_sp500), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for CAC40
plot_cac402 <- plot_ly(x = 1:length(log_returns_cac40), y = log_returns_cac40, type = "scatter", mode = "lines", name = "CAC40") %>% layout(title = "CAC40 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_cac40), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for Nasdaq
plot_nasdaq2 <- plot_ly(x = 1:length(log_returns_nasdaq), y = log_returns_nasdaq, type = "scatter", mode = "lines", name = "Nasdaq") %>% layout(title = "Nasdaq Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nasdaq), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for NIKKEI
plot_nikkei2 <- plot_ly(x = 1:length(log_returns_nikkei), y = log_returns_nikkei, type = "scatter", mode = "lines", name = "NIKKEI") %>% layout(title = "Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nikkei), y0 = 0, y1 = 0, line = list(color = "red"))))
# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
print(length(subplot_list))
# Show the combined plot
title(main = "Comparison of negative log returns of Stock Indices ", outer = TRUE)
# Define a function to calculate negative log returns
calculate_log_returns <- function(stocks) {
log_returns <- -diff(log(stocks))
return(log_returns)
}
# Calculate negative log returns for each index
log_returns_sp500 <- calculate_log_returns(sp500)
log_returns_cac40 <- calculate_log_returns(cac40)
log_returns_nasdaq <- calculate_log_returns(nasdaq)
log_returns_nikkei <- calculate_log_returns(nikkei)
#
# # Plot the log returns for each index
# par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# # Plot for SP500
# plot(log_returns_sp500, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "SP500", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")  # Add a reference line at zero
# # Plot for CAC40
# plot(log_returns_cac40, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "CAC40", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for Nasdaq
# plot(log_returns_nasdaq, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "Nasdaq", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for NIKKEI
# plot(log_returns_nikkei, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "NIKKEI", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Reset the plot layout
# par(mfrow = c(1, 1))
# Plot for SP500
plot_sp5002 <- plot_ly(x = 1:length(log_returns_sp500), y = log_returns_sp500, type = "scatter", mode = "lines", name = "SP500") %>% layout(title = "SP500 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_sp500), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for CAC40
plot_cac402 <- plot_ly(x = 1:length(log_returns_cac40), y = log_returns_cac40, type = "scatter", mode = "lines", name = "CAC40") %>% layout(title = "CAC40 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_cac40), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for Nasdaq
plot_nasdaq2 <- plot_ly(x = 1:length(log_returns_nasdaq), y = log_returns_nasdaq, type = "scatter", mode = "lines", name = "Nasdaq") %>% layout(title = "Nasdaq Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nasdaq), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for NIKKEI
plot_nikkei2 <- plot_ly(x = 1:length(log_returns_nikkei), y = log_returns_nikkei, type = "scatter", mode = "lines", name = "NIKKEI") %>% layout(title = "Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nikkei), y0 = 0, y1 = 0, line = list(color = "red"))))
# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
print(length(subplot_list))
# Show the combined plot
combined_plot2
title(main = "Comparison of negative log returns of Stock Indices ", outer = TRUE)
combined_plot2
# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
combined_plot2 <- layout(combined_plot2, title = "Comparison of Stock Indices")
# Show the combined plot
combined_plot2
# Define a function to calculate negative log returns
calculate_log_returns <- function(stocks) {
log_returns <- -diff(log(stocks))
return(log_returns)
}
# Calculate negative log returns for each index
log_returns_sp500 <- calculate_log_returns(sp500)
log_returns_cac40 <- calculate_log_returns(cac40)
log_returns_nasdaq <- calculate_log_returns(nasdaq)
log_returns_nikkei <- calculate_log_returns(nikkei)
#
# # Plot the log returns for each index
# par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# # Plot for SP500
# plot(log_returns_sp500, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "SP500", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")  # Add a reference line at zero
# # Plot for CAC40
# plot(log_returns_cac40, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "CAC40", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for Nasdaq
# plot(log_returns_nasdaq, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "Nasdaq", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for NIKKEI
# plot(log_returns_nikkei, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "NIKKEI", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Reset the plot layout
# par(mfrow = c(1, 1))
# Plot for SP500
plot_sp5002 <- plot_ly(x = 1:length(log_returns_sp500), y = log_returns_sp500, type = "scatter", mode = "lines", name = "SP500") %>% layout(title = "SP500 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_sp500), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for CAC40
plot_cac402 <- plot_ly(x = 1:length(log_returns_cac40), y = log_returns_cac40, type = "scatter", mode = "lines", name = "CAC40") %>% layout(title = "CAC40 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_cac40), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for Nasdaq
plot_nasdaq2 <- plot_ly(x = 1:length(log_returns_nasdaq), y = log_returns_nasdaq, type = "scatter", mode = "lines", name = "Nasdaq") %>% layout(title = "Nasdaq Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nasdaq), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for NIKKEI
plot_nikkei2 <- plot_ly(x = 1:length(log_returns_nikkei), y = log_returns_nikkei, type = "scatter", mode = "lines", name = "NIKKEI") %>% layout(title = "Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nikkei), y0 = 0, y1 = 0, line = list(color = "red"))))
# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
combined_plot2 <- layout(combined_plot2, title = "Comparison of negative log return of Stock Indices")
# Show the combined plot
combined_plot2
#QUESTION D)
# Create QQ-plots for log returns
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
qqnorm(log_returns_sp500, main = "QQ-Plot - SP500 Log Returns")
qqline(log_returns_sp500)
qqnorm(log_returns_cac40, main = "QQ-Plot - CAC40 Log Returns")
qqline(log_returns_cac40)
qqnorm(log_returns_nasdaq, main = "QQ-Plot - Nasdaq Log Returns")
qqline(log_returns_nasdaq)
qqnorm(log_returns_nikkei, main = "QQ-Plot - NIKKEI Log Returns")
qqline(log_returns_nikkei)
#QUESTION E)
library(nortest)
# Perform Anderson-Darling test for normality
ad_test_sp500 <- ad.test(log_returns_sp500)
ad_test_cac40 <- ad.test(log_returns_cac40)
ad_test_nasdaq <- ad.test(log_returns_nasdaq)
ad_test_nikkei <- ad.test(log_returns_nikkei)
# Print the results
print(ad_test_sp500)
print(ad_test_cac40)
print(ad_test_nasdaq)
print(ad_test_nikkei)
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nikkei, main = "ACF of Nikkei Index")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(QRM)
library(tseries)
library(nortest)
library(forecast)
library(plotly)
# Create interactive plots for each index
plot_sp500 <- plot_ly(x = sp500.df$DATE, y = sp500.df$SP500, type = "scatter", mode = "lines", name = "SP500") %>%
layout(title = "SP500")
plot_cac40 <- plot_ly(x = cac40.df$DATE, y = cac40.df$CAC40, type = "scatter", mode = "lines", name = "CAC40") %>%
layout(title = "CAC40")
plot_nasdaq <- plot_ly(x = nasdaq.df$DATE, y = nasdaq.df$NASDAQ, type = "scatter", mode = "lines", name = "Nasdaq") %>%
layout(title = "Nasdaq")
plot_nikkei <- plot_ly(x = nikkei.df$DATE, y = nikkei.df$NIKKEI, type = "scatter", mode = "lines", name = "NIKKEI") %>%
layout(title = "NIKKEI")
combined_plot <- subplot(plot_sp500, plot_cac40, plot_nasdaq, plot_nikkei, nrows = 2)
# Set a common title for the entire grid
combined_plot <- layout(combined_plot, title = "Comparison of Stock Indices")
# Show the combined plot
combined_plot
# ADF - Test
adf_test_sp500 <- adf.test(sp500$SP500) ; adf_test_sp500
adf_test_nasdaq <- adf.test(nasdaq$NASDAQ) ; adf_test_nasdaq
adf_test_cac40 <- adf.test(cac40$CAC40) ; adf_test_cac40
adf_test_nikkei <- adf.test(nikkei$NIKKEI) ; adf_test_nikkei
# Define a function to calculate negative log returns
calculate_log_returns <- function(stocks) {
log_returns <- -diff(log(stocks))
return(log_returns)
}
# Calculate negative log returns for each index
log_returns_sp500 <- calculate_log_returns(sp500)
log_returns_cac40 <- calculate_log_returns(cac40)
log_returns_nasdaq <- calculate_log_returns(nasdaq)
log_returns_nikkei <- calculate_log_returns(nikkei)
#
# # Plot the log returns for each index
# par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# # Plot for SP500
# plot(log_returns_sp500, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "SP500", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")  # Add a reference line at zero
# # Plot for CAC40
# plot(log_returns_cac40, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "CAC40", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for Nasdaq
# plot(log_returns_nasdaq, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "Nasdaq", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Plot for NIKKEI
# plot(log_returns_nikkei, type = "l", col = "black", xlab = "Time", ylab = "Negative Log Returns", main = "NIKKEI", ylim=c(0.1,-0.1))
# abline(h = 0, col = "red")
# # Reset the plot layout
# par(mfrow = c(1, 1))
# Plot for SP500
plot_sp5002 <- plot_ly(x = 1:length(log_returns_sp500), y = log_returns_sp500, type = "scatter", mode = "lines", name = "SP500") %>% layout(title = "SP500 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_sp500), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for CAC40
plot_cac402 <- plot_ly(x = 1:length(log_returns_cac40), y = log_returns_cac40, type = "scatter", mode = "lines", name = "CAC40") %>% layout(title = "CAC40 Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_cac40), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for Nasdaq
plot_nasdaq2 <- plot_ly(x = 1:length(log_returns_nasdaq), y = log_returns_nasdaq, type = "scatter", mode = "lines", name = "Nasdaq") %>% layout(title = "Nasdaq Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nasdaq), y0 = 0, y1 = 0, line = list(color = "red"))))
# Plot for NIKKEI
plot_nikkei2 <- plot_ly(x = 1:length(log_returns_nikkei), y = log_returns_nikkei, type = "scatter", mode = "lines", name = "NIKKEI") %>% layout(title = "Negative Log Returns", xaxis = list(title = "Time"), yaxis = list(title = "Negative Log Returns"), shapes = list(list(type = "line", x0 = 1, x1 = length(log_returns_nikkei), y0 = 0, y1 = 0, line = list(color = "red"))))
# Create a subplot with the list of individual plots
combined_plot2 <- subplot(plot_sp5002, plot_cac402, plot_nasdaq2, plot_nikkei2, nrows = 2)
combined_plot2 <- layout(combined_plot2, title = "Comparison of negative log return of Stock Indices")
# Show the combined plot
combined_plot2
#QUESTION C)
# Set the number of histogram bins
num_bins <- 30
# Create a common scale for the histograms
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# Plot histograms and overlay Normal distribution curves
hist(log_returns_sp500, breaks = num_bins, main = "Histogram - SP500 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_sp500), sd = sd(log_returns_sp500)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_cac40, breaks = num_bins, main = "Histogram - CAC40 Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_cac40), sd = sd(log_returns_cac40)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_nasdaq, breaks = num_bins, main = "Histogram - Nasdaq Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nasdaq), sd = sd(log_returns_nasdaq)), col = "blue", lwd = 2, add = TRUE)
hist(log_returns_nikkei, breaks = num_bins, main = "Histogram - NIKKEI Log Returns", xlab = "Log Returns", probability = TRUE, xlim=c(0.1,-0.1))
curve(dnorm(x, mean = mean(log_returns_nikkei), sd = sd(log_returns_nikkei)), col = "blue", lwd = 2, add = TRUE)
# Reset the plot layout
par(mfrow = c(1, 1))
#QUESTION D)
# Create QQ-plots for log returns
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
qqnorm(log_returns_sp500, main = "QQ-Plot - SP500 Log Returns")
qqline(log_returns_sp500)
qqnorm(log_returns_cac40, main = "QQ-Plot - CAC40 Log Returns")
qqline(log_returns_cac40)
qqnorm(log_returns_nasdaq, main = "QQ-Plot - Nasdaq Log Returns")
qqline(log_returns_nasdaq)
qqnorm(log_returns_nikkei, main = "QQ-Plot - NIKKEI Log Returns")
qqline(log_returns_nikkei)
#QUESTION E)
library(nortest)
# Perform Anderson-Darling test for normality
ad_test_sp500 <- ad.test(log_returns_sp500)
ad_test_cac40 <- ad.test(log_returns_cac40)
ad_test_nasdaq <- ad.test(log_returns_nasdaq)
ad_test_nikkei <- ad.test(log_returns_nikkei)
# Print the results
print(ad_test_sp500)
print(ad_test_cac40)
print(ad_test_nasdaq)
print(ad_test_nikkei)
# QUESTION F)
library(MASS)
# Remove missing values from log return datasets
log_returns_sp500 <- log_returns_sp500[!is.na(log_returns_sp500)]
log_returns_cac40 <- log_returns_cac40[!is.na(log_returns_cac40)]
log_returns_nasdaq <- log_returns_nasdaq[!is.na(log_returns_nasdaq)]
log_returns_nikkei <- log_returns_nikkei[!is.na(log_returns_nikkei)]
# Fit distributions : normal
fit_sp500 <- fitdistr(log_returns_sp500, "normal")
fit_cac40 <- fitdistr(log_returns_cac40, "normal")
fit_nasdaq <- fitdistr(log_returns_nasdaq, "normal")
fit_nikkei <- fitdistr(log_returns_nikkei, "normal")
# Fit a t-distribution to log returns
fit_sp500_t <- fitdistr(log_returns_sp500, "t")
fit_cac40_t <- fitdistr(log_returns_cac40, "t")
fit_nasdaq_t <- fitdistr(log_returns_nasdaq, "t")
fit_nikkei_t <- fitdistr(log_returns_nikkei, "t")
# Calculate AIC for each distribution
aic_sp500 <- AIC(fit_sp500)
aic_cac40 <- AIC(fit_cac40)
aic_nasdaq <- AIC(fit_nasdaq)
aic_nikkei <- AIC(fit_nikkei)
# Calculate AIC for each distribution
aic_sp500_t <- AIC(fit_sp500_t)
aic_cac40_t <- AIC(fit_cac40_t)
aic_nasdaq_t <- AIC(fit_nasdaq_t)
aic_nikkei_t <- AIC(fit_nikkei_t)
# Create a data frame to store AIC values
aic_data <- data.frame(
Index = c("SP500", "CAC40", "NASDAQ", "NIKKEI"),
Normal = c(aic_sp500, aic_cac40, aic_nasdaq, aic_nikkei),
T_Distribution = c(aic_sp500_t, aic_cac40_t, aic_nasdaq_t, aic_nikkei_t)
)
# Print the AIC data frame
print(aic_data)
# Create a bar plot of AIC values
barplot(
t(as.matrix(aic_data[, -1])),
beside = TRUE,
col = c("blue", "red"),
names.arg = aic_data$Index,
main = "AIC Comparison of Distributions",
xlab = "Index",
ylab = "AIC Value",
legend.text = c("Normal", "T-Distribution"),
args.legend = list(x = "topright", bty = "n")
)
#QUESTION G)
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
# Create QQ-plots for t-distributions
qqnorm(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]), main = "QQ-Plot - SP500 Log Returns (t-dist)")
qqline(rt(length(log_returns_sp500), df = fit_sp500_t$estimate["df"]))
qqnorm(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]), main = "QQ-Plot - CAC40 Log Returns (t-dist)")
qqline(rt(length(log_returns_cac40), df = fit_cac40_t$estimate["df"]))
qqnorm(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]), main = "QQ-Plot - Nasdaq Log Returns (t-dist)")
qqline(rt(length(log_returns_nasdaq), df = fit_nasdaq_t$estimate["df"]))
qqnorm(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]), main = "QQ-Plot - NIKKEI Log Returns (t-dist)")
qqline(rt(length(log_returns_nikkei), df = fit_nikkei_t$estimate["df"]))
#Part 2
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(nikkei, main = "ACF of Nikkei Index")
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
#QUESTION A)
# Plot ACF for the S&P 500 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_sp500, main = "ACF of S&P 500 Index")
# Plot ACF for the CAC 40 index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_cac40, main = "ACF of CAC 40 Index")
# Plot ACF for the NASDAQ index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nasdaq, main = "ACF of NASDAQ Index")
# Plot ACF for the Nikkei index with adjusted margins
par(mar = c(5, 4, 3, 2))
acf(log_returns_nikkei, main = "ACF of Nikkei Index")
#QUESTION B)
#Doing Box-Ljung procedures for all indices
Box.test(sp500, type = "Ljung-Box")
Box.test(cac40, type = "Ljung-Box")
Box.test(nasdaq, type = "Ljung-Box")
Box.test(nikkei, type = "Ljung-Box")
#Doing Box-Ljung procedures for all indices
Box.test(log_returns_sp500, type = "Ljung-Box")
Box.test(log_returns_cac40, type = "Ljung-Box")
Box.test(log_returns_nasdaq, type = "Ljung-Box")
Box.test(log_returns_nikkei, type = "Ljung-Box")
#QUESTION C)
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
par(mar = c(5, 4, 3, 2))
acf(log_returns_sp500)
par(mar = c(5, 4, 3, 2))
acf(log_returns_cac40)
par(mar = c(5, 4, 3, 2))
acf(log_returns_nasdaq)
par(mar = c(5, 4, 3, 2))
acf(log_returns_nikkei)
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
par(mar = c(5, 4, 3, 2))
pacf(log_returns_sp500)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_cac40)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nasdaq)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nikkei)
## ADF FOR SP500
adf.test(log_returns_sp500)
## ADF FOR CAC40
adf.test(log_returns_cac40)
## ADF FOR NASDAQ
adf.test(log_returns_nasdaq)
## ADF FOR NIKKEI
adf.test(log_returns_nikkei)
## ARIMA SP500
Arima(log_returns_sp500, order = c(8,0,7))
## ARIMA CAC40
Arima(log_returns_cac40, order = c(5,0,5))
## ARIMA NASDAQ
Arima(log_returns_nasdaq, order = c(7,0,7))
## ARIMA NIKKEI
Arima(log_returns_nikkei, order = c(1,0,1))
model_sp500 <- auto.arima(log_returns_sp500)# better the auto with parameters: ARIMA(2,0,1) non-zero mean
print(model_sp500)
auto.arima(log_returns_cac40) # better the auto with parameters: ARIMA(0,0,0) zero-mean
auto.arima(log_returns_nasdaq)# better the auto with parameters: ARIMA(2,0,2) with zero mean
auto.arima(log_returns_nikkei)# better the auto with parameters: ARIMA(2,0,1) with zero mean
#Doing Box-Ljung procedures for all indices
Box.test(log_returns_sp500, type = "Ljung-Box")
Box.test(log_returns_cac40, type = "Ljung-Box")
Box.test(log_returns_nasdaq, type = "Ljung-Box")
Box.test(log_returns_nikkei, type = "Ljung-Box")
# the CI includes 0, so not sure we're that heavy-tailed
gev.rl <- return.level(x = mod3, return.period = c(10,100,1000,10000),
do.ci = TRUE, alpha = 0.05)
## Simulate Gumbel distribution
# Go through quantile function of the Gumbel distribution, using unif(0,1) variates
x <- runif(1000)
mu <- 1
beta <- 5
y <- mu-beta*log(-log(x))
plot(y, x) # cdf of a Gumbel distribution
seqx <- seq(-50, 50, by=0.1)
z <- (seqx-mu)/beta
plot(seqx, 1/beta*exp(-z-exp(-z)), type="l")
# You can do pretty much the same for the other extreme-value distributions
# Anderson-Darling test
library(DescTools)
AndersonDarlingTest(y, null="pGumbel", loc=mu, scale=beta)
# Fitting a GEV distribution to Gumbel observations
library(ismev)
mod0 <- gev.fit(y)
# Does it fit?
qqplot(rGumbel(length(y), loc=mu, scale=beta), y)
qqline(y, distribution=function(p) qGumbel(p, loc=mu, scale=beta))
# What about a distribution you might not know which domain of attraction it falls into?
library(lubridate)
obs.date <- seq(from=as.Date("1993-01-01", format = "%Y-%m-%d"), to=as.Date("2022-12-31", format = "%Y-%m-%d"), by="day")
obs <- rt(length(obs.date), df=1.5)
df <- data.frame(obs.date)
df <- data.frame(df, obs)
max <- data.frame(0, 0, 0)
years <- unique(year(df$obs.date))
months <- unique(month(df$obs.date))
for(i in 1:length(years)){
for(j in 1:length(months)){
subset <- df[(month(df$obs.date)==months[j])&(year(df$obs.date)==years[i]),]
max <- rbind(max, c(month=months[j], year=years[i], max(subset$obs)))
}
}
max <- max[-1, ]
colnames(max) <- c("month", "year", "maximum")
mod1 <- gev.fit(max$maximum)
gev.diag(mod1) #diagnostics plot
mod2 <- gev.fit(max$maximum, max, mul=2)
mod2
1-pchisq(-2*(mod2$nllh-mod1$nllh),1) #chi-square test
# The trend is not significant, this is expected!
## Data example
## Reproduced from great walkthrough by Hugo Winter
## available at: https://younghydrologicsociety.files.wordpress.com/2018/04/eva_training_exercises_egu_2018.pdf
data(rain) #from ismev
years <- rep(1:48, rep(c(365,365,366,365), times = 12))[-17532]
rain.ann.max <- unlist(lapply(X = split(rain,years), FUN = max))
# annual maxima from this set of data in South-West England
# from extRemes package, can use fevd()
library(extRemes)
mod3 <- fevd(rain.ann.max, type="GEV", time.units="years")
plot(mod3)
mod3$results$par #gives parameters of the GEV
# suggest heavy-tailed model here, but only point estimates.
# What about building confidence intervals?
ci.fevd(mod3, alpha=0.05, type="parameter")
# the CI includes 0, so not sure we're that heavy-tailed
gev.rl <- return.level(x = mod3, return.period = c(10,100,1000,10000),
do.ci = TRUE, alpha = 0.05)
gev.rl
#notice the very wide CI for the 10000-year return level.
# We clearly do not have enough data and the uncertainty
# concerning the shape parameter drives this.
## How to compute return levels (by hand) using GEV
# e.g. in the rain example, compute the 10-year return level
# understand here: the value exceeded one out of every 10 365-days block (1 year)
# approximated by
as.numeric(mod3$results$par[1]+mod3$results$par[2]*((-log(1-1/10))^(-mod3$results$par[3])-1)/mod3$results$par[3])
# or, as it is the 1-1/k = 1-1/10th quantile
qgev(1-1/10, location=mod3$results$par[1], scale=mod3$results$par[2], shape=mod3$results$par[3])
obs <- rt(length(obs.date), df=1.5)
df <- data.frame(obs.date)
df <- data.frame(df, obs)
max <- data.frame(0, 0, 0)
years <- unique(year(df$obs.date))
months <- unique(month(df$obs.date))
for(i in 1:length(years)){
for(j in 1:length(months)){
subset <- df[(month(df$obs.date)==months[j])&(year(df$obs.date)==years[i]),]
max <- rbind(max, c(month=months[j], year=years[i], max(subset$obs)))
}
}
max <- max[-1, ]
colnames(max) <- c("month", "year", "maximum")
mod3$results$par #gives parameters of the GEV
mod3 <- fevd(rain.ann.max, type="GEV", time.units="years")
plot(mod3)
mod3$results$par #gives parameters of the GEV
ci.fevd(mod3, alpha=0.05, type="parameter")
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
par(mar = c(5, 4, 3, 2))
pacf(log_returns_sp500)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_cac40)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nasdaq)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nikkei)
par(mfrow = c(2, 2))  # Create a 2x2 grid of plots
par(oma = c(0, 0, 1, 0))
par(mar = c(5, 4, 3, 2))
pacf(log_returns_sp500)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_cac40)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nasdaq)
par(mar = c(5, 4, 3, 2))
pacf(log_returns_nikkei)
